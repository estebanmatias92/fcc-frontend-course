ARG NODE_VERSION=lts

FROM node:${NODE_VERSION} AS base

ENV PORT=3000
ENV NODE_ENV=development

# Build the image an run the container as non-provileged
USER node

WORKDIR /app


# Serve static files with hot-reload server
FROM base AS development

ARG PROJECT_DIR=.

# Download dependencies as a separate step to take advantage of Docker's caching.
# Leverage a cache mount to /root/.npm to speed up subsequent builds.
# Leverage a bind mounts to package.json and package-lock.json to avoid having to copy them into
# into this layer.
RUN --mount=type=bind,source=${PROJECT_DIR}/package.json,target=package.json \
    --mount=type=bind,source=${PROJECT_DIR}/package-lock.json,target=package-lock.json \
    --mount=type=cache,target=/root/.npm \
    npm ci

# Copy the rest of the source files into the image.
COPY --chown=node:node ${PROJECT_DIR} .

# Expose the port that the application listens on.
EXPOSE ${PORT}

CMD ["npm", "run", "dev"]

